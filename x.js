current_target="js";current_language="js";function length(x){return(x.length);}function sub(x,from,upto){if(is_string(x)){return(x.substring(from,upto));}else{return(x.slice(from,upto));}}function push(arr,x){arr[length(arr)]=x;}function join(a1,a2){return(a1.concat(a2));}function char(str,n){return(str.charAt(n));}function find(str,pattern,start){var i=str.indexOf(pattern,start);return(((i>0)&&i));}fs=require("fs");function read_file(path){return(fs.readFileSync(path,"utf8"));}function write_file(path,data){return(fs.writeFileSync(path,data,"utf8"));}function print(x){return(console.log(x));}function exit(code){return(process.exit(code));}function is_string(x){return((type(x)=="string"));}function is_string_literal(x){return((is_string(x)&&(char(x,0)=="\"")));}function is_number(x){return((type(x)=="number"));}function is_boolean(x){return((type(x)=="boolean"));}function is_composite(x){return((type(x)=="object"));}function is_atom(x){return(!(is_composite(x)));}function is_table(x){return((is_composite(x)&&(x[0]==undefined)));}function is_list(x){return((is_composite(x)&&!((x[0]==undefined))));}function parse_number(str){var n=parseFloat(str);if(!(isNaN(n))){return(n);}}function to_string(x){if((x==undefined)){return("nil");}else if(is_boolean(x)){return(((x&&"true")||"false"));}else if(is_atom(x)){return((x+""));}else{var str="(";var i=0;var _3=x;while((i<length(_3))){var y=_3[i];str=(str+to_string(y));if((i<(length(x)-1))){str=(str+" ");}i=(i+1);}return((str+")"));}}function error(msg){throw(msg);return(undefined);}function type(x){return(typeof(x));}function apply(f,args){return(f.apply(f,args));}unique_counter=0;function make_unique(prefix){unique_counter=(unique_counter+1);return(("_"+(prefix||"")+unique_counter));}eval_result=undefined;eof={};delimiters={};delimiters["("]=true;delimiters[")"]=true;delimiters[";"]=true;delimiters[eof]=true;delimiters["\n"]=true;whitespace={};whitespace[" "]=true;whitespace["\t"]=true;whitespace["\n"]=true;function make_stream(str){return({pos:0,string:str,len:length(str)});}function peek_char(s){return((((s.pos<s.len)&&char(s.string,s.pos))||eof));}function read_char(s){var c=peek_char(s);if(c){s.pos=(s.pos+1);return(c);}}function skip_non_code(s){while(true){var c=peek_char(s);if(!(c)){break;}else if(whitespace[c]){read_char(s);}else if((c==";")){while((c&&!((c=="\n")))){c=read_char(s);}skip_non_code(s);}else{break;}}}function read_atom(s){var str="";while(true){var c=peek_char(s);if((c&&(!(whitespace[c])&&!(delimiters[c])))){str=(str+c);read_char(s);}else{break;}}var n=parse_number(str);return((((n==undefined)&&str)||n));}function read_list(s){read_char(s);var l=[];while(true){skip_non_code(s);var c=peek_char(s);if((c&&!((c==")")))){push(l,read(s));}else if(c){read_char(s);break;}else{error(("Expected ) at "+s.pos));}}return(l);}function read_string(s){read_char(s);var str="\"";while(true){var c=peek_char(s);if((c&&!((c=="\"")))){if((c=="\\")){str=(str+read_char(s));}str=(str+read_char(s));}else if(c){read_char(s);break;}else{error(("Expected \" at "+s.pos));}}return((str+"\""));}function read_quote(s){read_char(s);return(["quote",read(s)]);}function read_unquote(s){read_char(s);if((peek_char(s)=="@")){read_char(s);return(["unquote-splicing",read(s)]);}else{return(["unquote",read(s)]);}}function read(s){skip_non_code(s);var c=peek_char(s);if((c==eof)){return(c);}else if((c=="(")){return(read_list(s));}else if((c==")")){return(error(("Unexpected ) at "+s.pos)));}else if((c=="\"")){return(read_string(s));}else if((c=="'")){return(read_quote(s));}else if((c==",")){return(read_unquote(s));}else{return(read_atom(s));}}function read_from_string(str){return(read(make_stream(str)));}operators={};operators["common"]={};operators["common"]["+"]="+";operators["common"]["-"]="-";operators["common"]["*"]="*";operators["common"]["/"]="/";operators["common"]["<"]="<";operators["common"][">"]=">";operators["common"]["="]="==";operators["common"]["<="]="<=";operators["common"][">="]=">=";operators["js"]={};operators["js"]["and"]="&&";operators["js"]["or"]="||";operators["js"]["cat"]="+";operators["lua"]={};operators["lua"]["and"]=" and ";operators["lua"]["or"]=" or ";operators["lua"]["cat"]="..";function get_op(op){return((operators["common"][op]||operators[current_target][op]));}macros={};special={};function is_call(form){return(is_string(form[0]));}function is_operator(form){return(!((get_op(form[0])==undefined)));}function is_special(form){return(!((special[form[0]]==undefined)));}function is_macro_call(form){return(!((macros[form[0]]==undefined)));}function is_macro_definition(form){return((form[0]=="defmacro"));}function compile_args(forms,is_compile){var str="(";var i=0;var _4=forms;while((i<length(_4))){var x=_4[i];var x1=((is_compile&&compile(x))||normalize(x));str=(str+x1);if((i<(length(forms)-1))){str=(str+",");}i=(i+1);}return((str+")"));}function compile_body(forms,is_tail){var str="";var i=0;var _5=forms;while((i<length(_5))){var x=_5[i];var is_t=(is_tail&&(i==(length(forms)-1)));str=(str+compile(x,true,is_t));i=(i+1);}return(str);}function normalize(id){var id2="";var i=0;while((i<length(id))){var c=char(id,i);if((c=="-")){c="_";}id2=(id2+c);i=(i+1);}var last=(length(id)-1);if((char(id,last)=="?")){var name=sub(id2,0,last);id2=("is_"+name);}return(id2);}function compile_atom(form){if((form=="nil")){return((((current_target=="js")&&"undefined")||"nil"));}else if((is_string(form)&&!(is_string_literal(form)))){return(normalize(form));}else{return(to_string(form));}}function compile_call(form){var fn=compile(form[0]);var args=compile_args(sub(form,1),true);return((fn+args));}function compile_operator(form){var str="(";var op=get_op(form[0]);var i=1;var _6=form;while((i<length(_6))){var arg=_6[i];str=(str+compile(arg));if((i<(length(form)-1))){str=(str+op);}i=(i+1);}return((str+")"));}function compile_do(forms,is_tail){return(compile_body(forms,is_tail));}function compile_set(form){if((length(form)<2)){error("Missing right-hand side in assignment");}var lh=compile(form[0]);var rh=compile(form[1]);return((lh+"="+rh));}function compile_branch(condition,body,is_first,is_last,is_tail){var cond1=compile(condition);var body1=compile(body,true,is_tail);var tr="";if((is_last&&(current_target=="lua"))){tr=" end ";}if(is_first){return((((current_target=="js")&&("if("+cond1+"){"+body1+"}"))||("if "+cond1+" then "+body1+tr)));}else if((condition==undefined)){return((((current_target=="js")&&("else{"+body1+"}"))||(" else "+body1+" end ")));}else{return((((current_target=="js")&&("else if("+cond1+"){"+body1+"}"))||(" elseif "+cond1+" then "+body1+tr)));}}function compile_if(form,is_tail){var str="";var i=0;var _7=form;while((i<length(_7))){var condition=_7[i];var is_last=(i>=(length(form)-2));var is_else=(i==(length(form)-1));var is_first=(i==0);var body=form[(i+1)];if(is_else){body=condition;condition=undefined;}i=(i+1);str=(str+compile_branch(condition,body,is_first,is_last,is_tail));i=(i+1);}return(str);}function is_vararg(name){return((sub(name,(length(name)-3),length(name))=="..."));}function bind_arguments(args,body){var i=0;var _8=args;while((i<length(_8))){var arg=_8[i];if(is_vararg(arg)){args=sub(args,0,i);var name=sub(arg,0,(length(arg)-3));var expr=["list","..."];if((current_target=="js")){expr=["Array.prototype.slice.call","arguments",i];}else{push(args,"...");}body=join([["local",name,expr]],body);break;}i=(i+1);}return([args,body]);}function compile_defun(form){var name=normalize(form[0]);var args=form[1];var body=sub(form,2);return(compile_function(args,body,name));}function compile_lambda(form){var args=form[0];var body=sub(form,1);return(compile_function(args,body));}function compile_function(args,body,name){name=(name||"");var expanded=bind_arguments(args,body);var args1=compile_args(expanded[0]);var body1=compile_body(expanded[1],true);if((current_target=="js")){return(("function "+name+args1+"{"+body1+"}"));}else{return(("function "+name+args1+body1+" end "));}}function compile_get(form){var object=compile(form[0]);var key=compile(form[1]);if(((current_target=="lua")&&(char(object,0)=="{"))){object=("("+object+")");}return((object+"["+key+"]"));}function compile_dot(form){var object=compile(form[0]);var key=form[1];return((object+"."+key));}function compile_not(form){var expr=compile(form[0]);var open=(((current_target=="js")&&"!(")||"(not ");return((open+expr+")"));}function compile_local(form){var lh=compile(form[0]);var keyword=(((current_target=="js")&&"var ")||"local ");if((form[1]==undefined)){return((keyword+lh));}else{var rh=compile(form[1]);return((keyword+lh+"="+rh));}}function compile_while(form){var condition=compile(form[0]);var body=compile_body(sub(form,1));return((((current_target=="js")&&("while("+condition+"){"+body+"}"))||("while "+condition+" do "+body+" end ")));}function compile_list(forms,is_quoted){var open=(((current_target=="lua")&&"{")||"[");var close=(((current_target=="lua")&&"}")||"]");var str="";var i=0;var _9=forms;while((i<length(_9))){var x=_9[i];if((is_list(x)&&(x[0]=="unquote-splicing"))){var x1=compile(x[1]);var x2=compile_list(sub(forms,(i+1)),true);open=("join("+open);close=(close+",join("+x1+","+x2+"))");break;}else{var x1=((is_quoted&&quote_form(x))||compile(x));str=(str+x1);if((i<(length(forms)-1))){str=(str+",");}}i=(i+1);}return((open+str+close));}function compile_table(forms){var sep=(((current_target=="lua")&&"=")||":");var str="{";var i=0;while((i<(length(forms)-1))){var k=compile(forms[i]);var v=compile(forms[(i+1)]);str=(str+k+sep+v);if((i<(length(forms)-2))){str=(str+",");}i=(i+2);}return((str+"}"));}function compile_each(forms){var args=forms[0];var t=args[0];var k=args[1];var v=args[2];var body=sub(forms,1);if((current_target=="lua")){var body1=compile_body(body);var t1=compile(t);return(("for "+k+","+v+" in pairs("+t1+") do "+body1+" end"));}else{var body1=compile_body(join([["set",v,["get",t,k]],],join(body,[])));return(("for("+k+" in "+t+"){"+body1+"}"));}}function compile_to_string(form){if(is_string_literal(form)){var str=sub(form,1,(length(form)-1));return(("\"\\\""+str+"\\\"\""));}else if(is_string(form)){return(("\""+form+"\""));}else{return(to_string(form));}}function quote_form(form){if(is_atom(form)){return(compile_to_string(form));}else if((form[0]=="unquote")){return(compile(form[1]));}else{return(compile_list(form,true));}}function compile_quote(forms){return(quote_form(forms[0]));}function compile_defmacro(form){var tmp=current_target;current_target=current_language;eval(compile_defun(form,true));var name=form[0];var register=["set",["get","macros",compile_to_string(name)],name];eval(compile(register,true));current_target=tmp;return("");}function compile_special(form,is_stmt,is_tail){var name=form[0];var sp=special[name];var is_tr=(is_stmt&&!(sp["terminated"]));var tr=((is_tr&&";")||"");var fn=sp["compiler"];return((fn(sub(form,1),is_tail)+tr));}special["do"]={compiler:compile_do,terminated:true,statement:true};special["if"]={compiler:compile_if,terminated:true,statement:true};special["while"]={compiler:compile_while,terminated:true,statement:true};special["defun"]={compiler:compile_defun,terminated:true,statement:true};special["defmacro"]={compiler:compile_defmacro,terminated:true,statement:true};special["local"]={compiler:compile_local,statement:true};special["set"]={compiler:compile_set,statement:true};special["each"]={compiler:compile_each,statement:true};special["get"]={compiler:compile_get};special["dot"]={compiler:compile_dot};special["not"]={compiler:compile_not};special["list"]={compiler:compile_list};special["table"]={compiler:compile_table};special["quote"]={compiler:compile_quote};special["lambda"]={compiler:compile_lambda};function is_can_return(form){if(is_macro_call(form)){return(false);}else if(is_special(form)){return(!(special[form[0]]["statement"]));}else{return(true);}}function compile(form,is_stmt,is_tail){var tr=((is_stmt&&";")||"");if((is_tail&&is_can_return(form))){form=["return",form];}if((form==undefined)){return("");}else if(is_atom(form)){return((compile_atom(form)+tr));}else if(is_call(form)){if(is_operator(form)){return((compile_operator(form)+tr));}else if(is_special(form)){return(compile_special(form,is_stmt,is_tail));}else if(is_macro_call(form)){var fn=macros[form[0]];var form=apply(fn,sub(form,1));return(compile(form,is_stmt,is_tail));}else{return((compile_call(form)+tr));}}else{return(error(("Unexpected form: "+to_string(form))));}}function compile_file(filename){var form;var output="";var s=make_stream(read_file(filename));while(true){form=read(s);if((form==eof)){break;}output=(output+compile(form,true));}return(output);}passed=0;function assert_equal(a,b){var sa=to_string(a);var sb=to_string(b);if(!((sa==sb))){return(error((" failed: expected "+sa+" was "+sb)));}else{passed=(passed+1);}}function run_tests(){print(" running tests...");assert_equal(18,18);assert_equal(123,123);assert_equal(0.123,0.123);assert_equal(17,(16+1));assert_equal(4,(7-3));assert_equal(5,(10/2));assert_equal(6,(2*3));assert_equal(true,!(false));assert_equal(true,(true||false));assert_equal(false,(true&&false));assert_equal(17,((true&&17)||18));assert_equal(18,((false&&17)||18));assert_equal("foo","foo");assert_equal("\"bar\"","\"bar\"");assert_equal(1,length("\""));assert_equal(2,length("a\""));assert_equal("foobar",("foo"+"bar"));assert_equal(2,length(("\""+"\"")));assert_equal("a","a");assert_equal("a","a");assert_equal("a",char("bar",1));assert_equal("uu",sub("quux",1,3));assert_equal([],[]);assert_equal([1],[1]);assert_equal(["a"],["a"]);assert_equal(["a"],["a"]);assert_equal(false,(["a"]==["\"a\""]));assert_equal(5,length([1,2,3,4,5]));assert_equal(3,length([1,[2,3,4],5]));assert_equal(3,length([1,[2,3,4],5][1]));var a="bar";assert_equal([1,2,"bar"],[1,2,a]);assert_equal(false,("\"a\""=="a"));assert_equal(false,(["a"]==["\"a\""]));assert_equal(["a",[2,3,7,"b"]],["a",[2,3,7,"b"]]);assert_equal([1,2,3],join([1],[2,3]));assert_equal([1,2,3,4],join([1],join([2],[3,4])));a=[2,3];assert_equal([1,2,3,4],join([1,],join(a,[4])));assert_equal([1,2,3,4],join([1,],join([2,3],[4])));assert_equal([1,2,3],join([1,],join(a,[])));assert_equal([2,3],join([],join(a,[])));assert_equal(4,eval(compile(["+",2,2])));assert_equal("foo",eval(compile(["quote","foo"])));assert_equal([2,3],apply(join,[[2],[3]]));apply(assert_equal,[4,4]);var f=function (x){return((x+1));};assert_equal(2,f(1));assert_equal(3,apply(function (a,b){return((a+b));},[1,2]));assert_equal([1,2],apply(function (){var a=Array.prototype.slice.call(arguments,0);return(a);},[1,2]));assert_equal([[1,2]],apply(function (){var a=Array.prototype.slice.call(arguments,0);return([a]);},[1,2]));assert_equal([1,2],apply(function (){var a=Array.prototype.slice.call(arguments,0);return(join([],join(a,[])));},[1,2]));f=function (){var a=Array.prototype.slice.call(arguments,0);return(a);};assert_equal(["a","b"],f("a","b"));var t={};t["foo"]=17;assert_equal({foo:17},t);t["bar"]=42;assert_equal({foo:17,bar:42},t);var x=0;var l=[1,2,3,4,5];var _10=0;var _11=l;while((_10<length(_11))){var v=_11[_10];x=(x+v);_10=(_10+1);}assert_equal(x,15);var l2=[];var i=0;var _12=l;while((i<length(_12))){var v=_12[i];l2[i]=v;i=(i+1);}assert_equal(l,l2);x=0;t={foo:10,bar:100};for(k in t){v=t[k];if((k=="foo")){x=(x+v+1);}else{x=(x+v+10);}};assert_equal(x,121);return(print((" "+passed+" passed")));}function interactive(){current_target=current_language;var execute=function (str){var form=read_from_string(str);var result=eval(compile(form));return(print(("=> "+to_string(result))));};process.stdin.resume();process.stdin.setEncoding("utf8");return(process.stdin.on("data",execute));}function usage(){print("usage: x [<input> | -i | -t] [-o <output>] [-l <language>]");return(exit());}args=sub(process.argv,2);if((length(args)<1)){usage();}else if((args[0]=="-i")){interactive();}else if((args[0]=="-t")){run_tests();}else{var input=args[0];var output=false;var i=1;var _13=args;while((i<length(_13))){var arg=_13[i];if(((arg=="-o")||(arg=="-l"))){if((length(args)>(i+1))){i=(i+1);var arg2=args[i];if((arg=="-o")){output=arg2;}else{current_target=arg2;}}else{print("missing argument for",arg);}}else{print("unrecognized option:",arg);}i=(i+1);}if((output==false)){var name=sub(input,0,find(input,"."));output=(name+"."+current_target);}write_file(output,compile_file(input));}